<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.multi.dao.StudentDAO">
    <resultMap id="studentMap" type="com.multi.dto.Student">
        <id property="id" column="id"/>
        <result property="studentNo" column="student_no"/>
        <result property="name" column="name" />
        <result property="email" column="email"/>
        <result property="dept" column="dept" />
        <result property="createdAt" column="created_at"/>
    </resultMap>

    <select id="findAll" parameterType="map" resultMap="studentMap">
        SELECT id, student_no, name, email, dept, created_at
        FROM student
        <where>
            <if test="q != null and q != ''">
                (name LIKE CONCAT('%', #{q}, '%')
                OR student_no LIKE CONCAT('%', #{q}, '%'))
            </if>
        </where>
        ORDER BY id DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="countAll" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM student
        <where>
            <if test="q != null and q != ''">
                (name LIKE CONCAT('%', #{q}, '%')
                OR student_no LIKE CONCAT('%', #{q}, '%'))
            </if>
        </where>
    </select>

    <select id="findById" parameterType="long" resultMap="studentMap">
        SELECT id, student_no, name, email, dept, created_at
        FROM student
        WHERE id = #{id}
    </select>

    <insert id="insert" parameterType="com.multi.dto.Student" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO student (student_no, name, email, dept)
        VALUES (#{studentNo}, #{name}, #{email}, #{dept})
    </insert>

    <update id="update" parameterType="com.multi.dto.Student">
        UPDATE student
        SET student_no = #{studentNo},
            name       = #{name},
            email      = #{email},
            dept       = #{dept}
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM student WHERE id = #{id}
    </delete>
</mapper>